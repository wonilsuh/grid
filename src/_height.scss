// Dependent on _core.scss from @ibm/grid

$height-scale:(
  8, 16, 24, 32, 48
);

$values-max: map-get($ibm-grid, $breakpoint-max);
$values-min: map-get($ibm-grid, $breakpoint-min);

@each $breakpoint, $values in $ibm-grid {
  @if $breakpoint != $breakpoint-max {
    @media (min-width:map-get($values, 'breakpoint')) {
      @each $height in $height-scale{
        .ibm-height-#{$breakpoint}-#{$height} {
          min-height: #{$height}px;
        }
      }

      $a:1;
      @while $a <= map-get($values, 'columns') {

        .ibm-f-height-#{$breakpoint}-#{$a} {
          $padding: get-padding($values, 1);
          min-height: calc( (100vw - (#{$padding}) * #{map-get($values, 'margin')} * 2) / #{map-get($values, 'columns')} * #{$a} );
        }

        @if map-get($values, 'margin') > 0 {
          $padding: get-padding($values, 1);
          .ibm-col-f-height-#{$breakpoint}-#{$a}.ibm-col-bleed {
            max-height: #{map-get($values-max, 'breakpoint') / map-get($values, 'columns') * $a };
            height: calc( 100vw / #{map-get($values, 'columns')} * #{$a} );
          }
          .ibm-col-f-height-#{$breakpoint}-#{$a}.ibm-col-bleed-left,
          .ibm-col-f-height-#{$breakpoint}-#{$a}.ibm-col-bleed-right {
            max-height: calc(#{(map-get($values-max, 'breakpoint') - map-get($values-max, 'padding') *2 ) / map-get($values, 'columns') * $a }  + #{map-get($values-max, 'padding')} );
            height: calc( (100vw - (#{$padding}) * #{map-get($values, 'margin')} * 2) / #{map-get($values, 'columns')} * #{$a} + #{$padding});
          }
        }

        $a:$a + 1;
      }
    }
  }
}

.ibm-height-strict {
  max-height: 0;
}