// Dependent on _core.scss from @ibm/grid

$height-scale:(
  16, 24, 32, 48, 64, 96, 128, 144, 192, 256, 384, 512, 768
);

@each $breakpoint, $values in $ibm-grid {
  @if $breakpoint != 'max' {
    @media (min-width:map-get($values, 'breakpoint')) {
      @each $height in $height-scale{
        .ibm-height-#{$breakpoint}-#{$height} {
          min-height: #{$height}px;
        }
      }
    }
  }
}

/* fluid height */
@each $breakpoint, $values in $ibm-grid {
  @if $breakpoint != 'max' {
    @media (min-width:map-get($values, 'breakpoint')) {
      $a:1;
      @while $a <= 16 {
        .ibm-f-height-#{$breakpoint}-#{$a} {
          @if map-get($values, 'unit') == $unit64 {
            min-height: 100vw / map-get($values, columns) * $a;
          } @else {
            min-height: (100vw - map-get($values, 'unit') * 2) / map-get($values, columns) * $a;
          }
        }
        $a: $a + 1;
      }
    }
    @if(map-get($values, 'unit') == $unit64){
      @media (min-width: map-get(map-get($ibm-grid, $col-64-66-breakpoint), breakpoint)) {
        $a: 1;
        @while $a <= map-get($values, columns) {
          .ibm-f-height-#{$breakpoint}-#{$a} {
            min-height: (100vw - (100vw / 66) * 2)/ map-get($values, columns) * $a;
          }
          $a: $a + 1;
        }
      }
    }
    $max-breakpoint-values:map-get($ibm-grid, 'max');
    @media (min-width:map-get($max-breakpoint-values, 'breakpoint')) {
      $a:1;
      @while $a <= 16 {
        .ibm-f-height-#{$breakpoint}-#{$a} {
          min-height: (map-get($max-breakpoint-values, 'breakpoint') - map-get($max-breakpoint-values, 'unit') * 2) / map-get($max-breakpoint-values, columns) * $a;
        }
        $a: $a + 1;
      }
    }
  }
}

.ibm-height-strict {
  max-height: 0;
}